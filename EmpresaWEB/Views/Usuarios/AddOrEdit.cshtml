@model EmpresaWEB.Models.mvcUsuario
@{
    ViewBag.Title = "AddOrEdit";
}

<div class="form-body">
    @using (Html.BeginForm("AddOrEdit", "Usuarios", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post))
    {
        @Html.HiddenFor(model => model.UsuarioId)

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre)
            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", placeholder = "Nombre", id = "Nombre" } })
            @Html.ValidationMessageFor(model => model.Nombre)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Apellido)
            @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control", placeholder = "Apellido", id = "Apellido" } })
            @Html.ValidationMessageFor(model => model.Apellido)
        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.Correo)
            @if (Model.Correo == null)
            {
                @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control", placeholder = "Correo", Type = "email", id = "Correo"} })
            }
            else
            {
                @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control", placeholder = "Correo", Type = "email", id = "Correo" } })
            }

            @Html.ValidationMessageFor(model => model.Correo)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contraseña)
            @Html.EditorFor(model => model.Contraseña, new { htmlAttributes = new { @class = "form-control", placeholder = "Contraseña", Type = "password", id = "Contraseña" } })
            @Html.ValidationMessageFor(model => model.Contraseña)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rol)
            @{
                List<SelectListItem> listItems = new List<SelectListItem>();
                listItems.Add(new SelectListItem
                {
                    Text = "Admin",
                    Value = "Admin"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Client",
                    Value = "Client",
                    Selected = true
                });
            }
            @Html.DropDownListFor(model => model.Rol, listItems, new { @class = "form-control", id = "Rol" })
            @Html.ValidationMessageFor(model => model.Rol)
        </div>

        <div class="form-group">
            <input type="submit" value="Submit" class="btn button" />
            <input type="reset" value="Reset" class="btn button" />
        </div>
    }
</div>

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval");

    <script>

        $('form').on('submit', function (e) {
            e.preventDefault();
            validateData();
            return false;
        });
        function swalShowLoading() { Swal.showLoading(); }

        function validateData() {
            var data = JSON.stringify({
                'UsuarioId' : $('#UsuarioId').val(),
                'Nombre': $('#Nombre').val(),
                'Apellido': $('#Apellido').val(),
                'Correo': $('#Correo').val(),
                'Contraseña': $('#Contraseña').val(),
                'Rol': $('#Rol').val()
            });
            $.ajax({
                type: "POST",
                url: "/Usuarios/AddOrEdit",
                data: data,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () { swalShowLoading(); },
                statusCode: {
                    200: function () {
                        Swal.fire({
                            icon: 'success', title: 'Todo en Orden =D', text: 'Registro Exitoso!',
                            backdrop: `rgba(0,0,123,0.4) url("https://sweetalert2.github.io/images/nyan-cat.gif") left top repeat`
                        }).then(function (result) {
                            if (result) {
                                location.href = '/Usuarios';
                            }
                        });
                    },
                    201: function () {
                        Swal.fire({
                            icon: 'success', title: 'Todo en Orden =D', text: 'Actualizado Exitoso!',
                            backdrop: `rgba(0,0,123,0.4) url("https://sweetalert2.github.io/images/nyan-cat.gif") left top repeat`
                        }).then(function (result) {
                            if (result) {
                                location.href = '/Usuarios';
                            }
                        });
                    },
                    400: function (request, status, error) {
                        Swal.fire({
                            icon: 'error', title: 'Error al actualizar :(', text: 'Email en Uso',
                            backdrop: `rgba(0,0,123,0.4) url("https://sweetalert2.github.io/images/nyan-cat.gif") left top repeat`
                        });
                    },
                    402: function (request, status, error) {
                        Swal.fire({
                            icon: 'error', title: 'Error al registrar :(', text: 'Email en Uso',
                            backdrop: `rgba(0,0,123,0.4) url("https://sweetalert2.github.io/images/nyan-cat.gif") left top repeat`
                        });
                    }
                },
                error: function (jqXHR, status, error) {
                    Swal.fire('Error', 'Error del servidor !', 'error');
                }
            });
            return true;
        }
    </script>
}



